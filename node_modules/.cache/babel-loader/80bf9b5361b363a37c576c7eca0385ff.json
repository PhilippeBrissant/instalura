{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PhilippeBrissant\\\\Downloads\\\\Alura\\\\react\\\\parte2-instalura\\\\src\\\\componentes\\\\Timeline.js\";\nimport React, { Component } from 'react';\nimport FotoItem from './Foto'; // import { TransitionGroup } from 'react-transition-group/'\n\nimport { CSSTransition } from 'react-transition-group/';\nexport default class Timeline extends Component {\n  constructor() {\n    super();\n    this.state = {\n      fotos: []\n    };\n  }\n\n  componentWillMount() {\n    this.props.store.subscribe(fotos => {\n      this.setState({\n        fotos: fotos\n      }); // console.log(\"FOTOS timeline: \", this.state.fotos);\n    });\n  }\n\n  componentDidMount() {\n    this.carregaFotos();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"fotos container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(CSSTransition, {\n      transitionName: \"timeline\",\n      transitionEnterTimeout: 500,\n      transitionLeaveTimeout: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, this.state.fotos.map(foto => React.createElement(FotoItem, {\n      key: foto.id,\n      foto: foto,\n      like: this.like.bind(this),\n      comenta: this.comenta.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }))));\n  }\n\n  carregaFotos() {\n    console.log('PROPS DE TIMELINE ', this.props);\n    /*\r\n    //fetch API = alternativa ao AJAX\r\n    //retorna uma Promise\r\n    const resultado = fetch('https://instalura-api.herokuapp.com/api/public/fotos/rafael');\r\n    const html = resultado.then(resp => resp.text());\r\n    html.then(pagina => console.log(pagina));\r\n    \r\n      var p = new Promise(resolve => resolve(\"curso react\"));\r\n    //p será uma promise com estado \"resolved\" e valor \"curso react\"\r\n    //é possível passar uma função para 'reject' também\r\n    */\n\n    var url = '';\n    if (localStorage.getItem('auth-token') != null) url = \"https://instalura-api.herokuapp.com/api/fotos?X-AUTH-TOKEN=\".concat(localStorage.getItem('auth-token'));else url = \"https://instalura-api.herokuapp.com/api/public/fotos/\".concat(this.props.login);\n    this.props.store.lista(url);\n  }\n\n  like(fotoId) {\n    this.props.store.like(fotoId);\n  }\n\n  comenta(fotoId, textComentario) {\n    this.props.store.comenta(fotoId, textComentario);\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\PhilippeBrissant\\Downloads\\Alura\\react\\parte2-instalura\\src\\componentes\\Timeline.js"],"names":["React","Component","FotoItem","CSSTransition","Timeline","constructor","state","fotos","componentWillMount","props","store","subscribe","setState","componentDidMount","carregaFotos","render","map","foto","id","like","bind","comenta","console","log","url","localStorage","getItem","login","lista","fotoId","textComentario"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,QAArB,C,CACA;;AACA,SAASC,aAAT,QAA8B,yBAA9B;AAEA,eAAe,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAE5CI,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAC;AAAP,KAAb;AACH;;AAEDC,EAAAA,kBAAkB,GAAE;AAChB,SAAKC,KAAL,CAAWC,KAAX,CAAiBC,SAAjB,CAA4BJ,KAAD,IAAW;AAClC,WAAKK,QAAL,CAAc;AAACL,QAAAA,KAAK,EAAEA;AAAR,OAAd,EADkC,CAElC;AACH,KAHD;AAIH;;AAEDM,EAAAA,iBAAiB,GAAE;AACf,SAAKC,YAAL;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AACI,MAAA,cAAc,EAAC,UADnB;AAEI,MAAA,sBAAsB,EAAE,GAF5B;AAGI,MAAA,sBAAsB,EAAE,GAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKY,KAAKT,KAAL,CAAWC,KAAX,CAAiBS,GAAjB,CAAqBC,IAAI,IACrB,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AACY,MAAA,IAAI,EAAED,IADlB;AAEY,MAAA,IAAI,EAAE,KAAKE,IAAL,CAAUC,IAAV,CAAe,IAAf,CAFlB;AAGY,MAAA,OAAO,EAAE,KAAKC,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CALZ,CADJ,CADJ;AAiBH;;AAEDN,EAAAA,YAAY,GAAE;AACVQ,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,KAAKd,KAAvC;AACA;;;;;;;;;;;;AAYD,QAAIe,GAAG,GAAG,EAAV;AACC,QAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,KAAsC,IAAzC,EACIF,GAAG,wEAAiEC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAjE,CAAH,CADJ,KAGIF,GAAG,kEAA2D,KAAKf,KAAL,CAAWkB,KAAtE,CAAH;AAEJ,SAAKlB,KAAL,CAAWC,KAAX,CAAiBkB,KAAjB,CAAuBJ,GAAvB;AACH;;AAEDL,EAAAA,IAAI,CAACU,MAAD,EAAQ;AACR,SAAKpB,KAAL,CAAWC,KAAX,CAAiBS,IAAjB,CAAsBU,MAAtB;AACH;;AAEDR,EAAAA,OAAO,CAACQ,MAAD,EAASC,cAAT,EAAwB;AAC3B,SAAKrB,KAAL,CAAWC,KAAX,CAAiBW,OAAjB,CAAyBQ,MAAzB,EAAiCC,cAAjC;AACH;;AAnE2C","sourcesContent":["import React, { Component } from 'react'\r\nimport FotoItem from './Foto';\r\n// import { TransitionGroup } from 'react-transition-group/'\r\nimport { CSSTransition } from 'react-transition-group/'\r\n\r\nexport default class Timeline extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {fotos:[]};\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.props.store.subscribe((fotos) => {\r\n            this.setState({fotos: fotos});\r\n            // console.log(\"FOTOS timeline: \", this.state.fotos);\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.carregaFotos();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"fotos container\">\r\n                <CSSTransition\r\n                    transitionName=\"timeline\"\r\n                    transitionEnterTimeout={500}\r\n                    transitionLeaveTimeout={300}>\r\n                        {\r\n                            this.state.fotos.map(foto => \r\n                                <FotoItem key={foto.id} \r\n                                            foto={foto} \r\n                                            like={this.like.bind(this)} \r\n                                            comenta={this.comenta.bind(this)}/>\r\n                            )\r\n                        }\r\n                </CSSTransition>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    carregaFotos(){\r\n        console.log('PROPS DE TIMELINE ', this.props);\r\n        /*\r\n        //fetch API = alternativa ao AJAX\r\n        //retorna uma Promise\r\n        const resultado = fetch('https://instalura-api.herokuapp.com/api/public/fotos/rafael');\r\n        const html = resultado.then(resp => resp.text());\r\n        html.then(pagina => console.log(pagina));\r\n        \r\n\r\n        var p = new Promise(resolve => resolve(\"curso react\"));\r\n        //p será uma promise com estado \"resolved\" e valor \"curso react\"\r\n        //é possível passar uma função para 'reject' também\r\n        */\r\n       var url = '';\r\n        if(localStorage.getItem('auth-token') != null)\r\n            url = `https://instalura-api.herokuapp.com/api/fotos?X-AUTH-TOKEN=${localStorage.getItem('auth-token')}`;\r\n        else\r\n            url = `https://instalura-api.herokuapp.com/api/public/fotos/${this.props.login}`\r\n\r\n        this.props.store.lista(url);\r\n    }\r\n\r\n    like(fotoId){\r\n        this.props.store.like(fotoId);\r\n    }\r\n\r\n    comenta(fotoId, textComentario){\r\n        this.props.store.comenta(fotoId, textComentario);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}