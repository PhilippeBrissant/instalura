{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PhilippeBrissant\\\\Downloads\\\\Alura\\\\react\\\\parte2-instalura\\\\src\\\\componentes\\\\Timeline.js\";\nimport React, { Component } from 'react';\nimport Foto from './Foto';\nexport default class Timeline extends Component {\n  componentDidMount() {\n    /*\r\n    //fetch API = alternativa ao AJAX\r\n    //retorna uma Promise\r\n    const resultado = fetch('https://instalura-api.herokuapp.com/api/public/fotos/rafael');\r\n    const html = resultado.then(resp => resp.text());\r\n    html.then(pagina => console.log(pagina));\r\n    \r\n      var p = new Promise(resolve => resolve(\"curso react\"));\r\n    //p será uma promise com estado \"resolved\" e valor \"curso react\"\r\n    //é possível passar uma função para 'reject' também\r\n    */\n    fetch('https://instalura-api.herokuapp.com/api/public/fotos/rafael').then(response => response.json()).then(fotos => {\n      this.setState({\n        fotos: fotos\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"fotos container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Foto, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(Foto, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Foto, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\PhilippeBrissant\\Downloads\\Alura\\react\\parte2-instalura\\src\\componentes\\Timeline.js"],"names":["React","Component","Foto","Timeline","componentDidMount","fetch","then","response","json","fotos","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAE5CG,EAAAA,iBAAiB,GAAE;AACf;;;;;;;;;;;AAaDC,IAAAA,KAAK,CAAC,6DAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,KAAK,IAAI;AACX,WAAKC,QAAL,CAAc;AAACD,QAAAA,KAAK,EAACA;AAAP,OAAd;AACH,KAJD;AAKF;;AAEDE,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAOH;;AA/B2C","sourcesContent":["import React, { Component } from 'react'\r\nimport Foto from './Foto';\r\n\r\nexport default class Timeline extends Component {\r\n\r\n    componentDidMount(){\r\n        /*\r\n        //fetch API = alternativa ao AJAX\r\n        //retorna uma Promise\r\n        const resultado = fetch('https://instalura-api.herokuapp.com/api/public/fotos/rafael');\r\n        const html = resultado.then(resp => resp.text());\r\n        html.then(pagina => console.log(pagina));\r\n        \r\n\r\n        var p = new Promise(resolve => resolve(\"curso react\"));\r\n        //p será uma promise com estado \"resolved\" e valor \"curso react\"\r\n        //é possível passar uma função para 'reject' também\r\n        */\r\n\r\n       fetch('https://instalura-api.herokuapp.com/api/public/fotos/rafael')\r\n       .then(response => response.json())\r\n       .then(fotos => {\r\n           this.setState({fotos:fotos});\r\n       });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"fotos container\">\r\n                <Foto />\r\n                <Foto />\r\n                <Foto />\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}