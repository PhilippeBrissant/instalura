{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PhilippeBrissant\\\\Downloads\\\\Alura\\\\react\\\\parte2-instalura\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './css/reset.css';\nimport './css/timeline.css';\nimport './css/login.css';\nimport { BrowserRouter, Switch, Route, Redirect, matchPath } from 'react-router-dom';\nimport Login from './componentes/Login';\nimport Logout from './componentes/Logout';\nimport App from './App';\n\nfunction verificaAutenticacao(nextState, replace) {\n  const match = matchPath('/timeline', {\n    path: nextState.match.url,\n    exact: true\n  });\n  let valida = false;\n\n  if (match !== null) {\n    valida = match.isExact;\n  }\n\n  if (valida && localStorage.getItem('auth-token') === null) {\n    return React.createElement(Redirect, {\n      to: {\n        pathname: '/',\n        state: {\n          msg: 'Faça login para acessar esta página'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  });\n}\n\nReactDOM.render(React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: Login,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: \"/timeline/:login?\",\n  render: verificaAutenticacao,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: \"/logout\",\n  component: Logout,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}))), document.getElementById('root')); // function verificaAutenticacao(nextState, replace){\n//     console.log(nextState);\n//     const history = createBrowserHistory();\n//     const match = matchPath('timeline', {path: nextState.match.url});\n//     const rotaPrivadaDaTimeline = match === null;\n//     if(rotaPrivadaDaTimeline && localStorage.getItem('auth-token') != null)\n//         return true;\n// }\n// ReactDOM.render(\n//     (<BrowserRouter>\n//         <Route exact path=\"/\" component={Login}/>\n//         <Route exact path=\"/logout\" component={Logout}/>\n//         <Route exact path=\"/timeline/:login\" render={\n//             () => verificaAutenticacao() ? \n//                 <App /> : <Redirect to=\"/?msg=Você precisa estar logado!\"/>\n//         }/>\n//     </BrowserRouter>), \n//     document.getElementById('root')\n// );\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:\\Users\\PhilippeBrissant\\Downloads\\Alura\\react\\parte2-instalura\\src\\index.js"],"names":["React","ReactDOM","serviceWorker","BrowserRouter","Switch","Route","Redirect","matchPath","Login","Logout","App","verificaAutenticacao","nextState","replace","match","path","url","exact","valida","isExact","localStorage","getItem","pathname","state","msg","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAO,iBAAP;AACA,OAAO,oBAAP;AACA,OAAO,iBAAP;AACA,SAAQC,aAAR,EAAuBC,MAAvB,EAA+BC,KAA/B,EAAsCC,QAAtC,EAAgDC,SAAhD,QAAgE,kBAAhE;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,SAASC,oBAAT,CAA8BC,SAA9B,EAAyCC,OAAzC,EAAkD;AAC9C,QAAMC,KAAK,GAAGP,SAAS,CAAC,WAAD,EAAc;AACjCQ,IAAAA,IAAI,EAAEH,SAAS,CAACE,KAAV,CAAgBE,GADW;AAEjCC,IAAAA,KAAK,EAAE;AAF0B,GAAd,CAAvB;AAKA,MAAIC,MAAM,GAAG,KAAb;;AACA,MAAIJ,KAAK,KAAK,IAAd,EAAoB;AAChBI,IAAAA,MAAM,GAAGJ,KAAK,CAACK,OAAf;AACH;;AAED,MAAID,MAAM,IAAIE,YAAY,CAACC,OAAb,CAAqB,YAArB,MAAuC,IAArD,EAA2D;AACvD,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AACjBC,QAAAA,QAAQ,EAAE,GADO;AAEjBC,QAAAA,KAAK,EAAG;AAACC,UAAAA,GAAG,EAAE;AAAN;AAFS,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAIH;;AACD,SAAO,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH;;AAEDvB,QAAQ,CAACwB,MAAT,CACK,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,GAAlB;AAAsB,EAAA,SAAS,EAAEjB,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,mBAAlB;AAAsC,EAAA,MAAM,EAAEG,oBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAGI,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,SAAlB;AAA4B,EAAA,SAAS,EAAEF,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHJ,CADH,CADL,EASIiB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CATJ,E,CAYA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACAzB,aAAa,CAAC0B,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './css/reset.css';\nimport './css/timeline.css';\nimport './css/login.css';\nimport {BrowserRouter, Switch, Route, Redirect, matchPath} from 'react-router-dom';\nimport Login from './componentes/Login'\nimport Logout from './componentes/Logout'\nimport App from './App';\n\nfunction verificaAutenticacao(nextState, replace) { \n    const match = matchPath('/timeline', {\n        path: nextState.match.url,\n        exact: true\n    })  \n\n    let valida = false\n    if (match !== null) {\n        valida = match.isExact\n    }\n\n    if (valida && localStorage.getItem('auth-token') === null) { \n        return <Redirect to={{\n            pathname: '/',\n            state:  {msg: 'Faça login para acessar esta página'}\n        }}/>\n    }\n    return <App/>\n}\n\nReactDOM.render(\n    (<BrowserRouter>\n        <Switch>\n            <Route exact path=\"/\" component={Login}/>\n            <Route exact path=\"/timeline/:login?\" render={verificaAutenticacao}/>\n            <Route exact path=\"/logout\" component={Logout}/>\n        </Switch>\n    </BrowserRouter>), \n\n    document.getElementById('root')\n);\n\n// function verificaAutenticacao(nextState, replace){\n//     console.log(nextState);\n//     const history = createBrowserHistory();\n//     const match = matchPath('timeline', {path: nextState.match.url});\n//     const rotaPrivadaDaTimeline = match === null;\n\n//     if(rotaPrivadaDaTimeline && localStorage.getItem('auth-token') != null)\n//         return true;\n// }\n\n// ReactDOM.render(\n//     (<BrowserRouter>\n//         <Route exact path=\"/\" component={Login}/>\n//         <Route exact path=\"/logout\" component={Logout}/>\n//         <Route exact path=\"/timeline/:login\" render={\n//             () => verificaAutenticacao() ? \n//                 <App /> : <Redirect to=\"/?msg=Você precisa estar logado!\"/>\n//         }/>\n//     </BrowserRouter>), \n//     document.getElementById('root')\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}