{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PhilippeBrissant\\\\Downloads\\\\Alura\\\\react\\\\parte2-instalura\\\\src\\\\componentes\\\\Foto.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nexport default class Foto extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"foto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(Header, {\n      foto: this.props.foto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      alt: \"foto\",\n      className: \"foto-src\",\n      src: this.props.foto.urlFoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }), React.createElement(FotoInfo, {\n      foto: this.props.foto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }), React.createElement(FotoAtualizacao, {\n      foto: this.props.foto,\n      like: this.props.like,\n      comenta: this.props.comenta,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass Header extends Component {\n  render() {\n    return React.createElement(\"header\", {\n      className: \"foto-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"figure\", {\n      className: \"foto-usuario\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.foto.urlPerfil,\n      alt: \"foto do usuario\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(\"figcaption\", {\n      className: \"foto-usuario\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/timeline/\".concat(this.props.foto.loginUsuario),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.props.foto.loginUsuario))), React.createElement(\"time\", {\n      className: \"foto-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, this.props.foto.horario));\n  }\n\n}\n\nclass FotoInfo extends Component {\n  // constructor(props){\n  //     super(props);\n  //     this.state = {likers: this.props.foto.likers, comentarios: this.props.foto.comentarios}\n  // }\n  // componentWillMount(){\n  //     Pubsub.subscribe('atualiza-liker', (topico, infoLiker) => {\n  //         // console.log(topico);\n  //         // console.log('infoliker: ', infoLiker);\n  //         if(this.props.foto.id === infoLiker.fotoId){\n  //             const possivelLiker = this.state.likers.find(liker => liker.login === infoLiker.liker.login);\n  //             // console.log('possivelLiker: ', possivelLiker);\n  //             //se não achar o novo liker na lista, adiciona-o\n  //             if(possivelLiker === undefined){\n  //                 const novosLikers = this.state.likers.concat(infoLiker.liker);\n  //                 this.setState({likers: novosLikers});\n  //             }\n  //             //caso contrário, o liker está na lista, ou seja, ele esta dando dislike e tem que sair da mesma\n  //             else{\n  //                 const novosLikers = this.state.likers.filter(liker => liker.login !== infoLiker.liker.login);\n  //                 this.setState({likers: novosLikers});\n  //             }\n  //         }           \n  //     });\n  //     Pubsub.subscribe('novos-comentarios', (topico, infoComentario) => {\n  //         if(this.props.foto.id === infoComentario.fotoId){\n  //             const novosComents = this.state.comentarios.concat(infoComentario.comentario);\n  //             this.setState({comentarios: novosComents});\n  //         }\n  //     });\n  // }\n  render() {\n    return React.createElement(\"div\", {\n      className: \"foto-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"foto-info-likes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.props.foto.likers.map(liker => {\n      return React.createElement(Link, {\n        key: liker.login,\n        to: \"/timeline/\".concat(liker.login),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, liker.login, \",\");\n    }), \"curtiram\"), React.createElement(\"p\", {\n      className: \"foto-info-legenda\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/timeline/\".concat(this.props.foto.loginUsuario),\n      className: \"foto-info-autor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.props.foto.loginUsuario), this.props.foto.comentario), React.createElement(\"ul\", {\n      className: \"foto-info-comentarios\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.props.foto.comentarios.map(comentarioDaFoto => {\n      return React.createElement(\"li\", {\n        key: comentarioDaFoto.id,\n        className: \"comentario\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/timeline/\".concat(comentarioDaFoto.login),\n        className: \"foto-info-autor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, comentarioDaFoto.login), comentarioDaFoto.texto);\n    })));\n  }\n\n}\n\nclass FotoAtualizacao extends Component {\n  // constructor(props){\n  //     super(props);\n  //     this.state = {liked: this.props.foto.likeada};\n  // }\n  like(event) {\n    event.preventDefault();\n    this.props.like(this.props.foto.id);\n  }\n\n  comenta(event) {\n    event.preventDefault();\n    this.props.comenta(this.props.foto.id, this.comentario.value);\n  } // like(event){\n  //     event.preventDefault();\n  //     const url = `https://instalura-api.herokuapp.com/api/fotos/${this.props.foto.id}/like?X-AUTH-TOKEN=${localStorage.getItem('auth-token')}`;\n  //     fetch(url, {method: 'POST'})\n  //     .then(response => {\n  //         if(response.ok)\n  //             return response.json();\n  //         else{\n  //             // console.log('response: ', response);\n  //             throw new Error(\"Não foi possível realizar o like da foto\");\n  //         }\n  //     })\n  //     .then(liker =>{\n  //         // console.log('liker: ', liker);\n  //         this.setState({ liked : !this.state.liked });\n  //         Pubsub.publish('atualiza-liker', {fotoId:this.props.foto.id, liker: liker});\n  //         // Pubsub.publish('atualiza-liker', {fotoId:this.props.id, liker}); shortest hand\n  //     });\n  // }\n  // comenta(event){\n  //     event.preventDefault();\n  //     const url = `https://instalura-api.herokuapp.com/api/fotos/${this.props.foto.id}/comment?X-AUTH-TOKEN=${localStorage.getItem('auth-token')}`;\n  //     const resquestInfo = {\n  //         method: 'POST',\n  //         body: JSON.stringify({\n  //             texto: this.comentario.value\n  //         }),\n  //         headers: new Headers({\n  //             'Content-type':'application/json'\n  //         })\n  //     };\n  //     fetch(url, resquestInfo)\n  //     .then(response =>{\n  //         if(response.ok)\n  //             return response.json();\n  //         else\n  //             return new Error(\"Erro ao comentar\");\n  //     })\n  //     .then(coment =>{\n  //         Pubsub.publish('novos-comentarios', {fotoId: this.props.foto.id, comentario: coment});\n  //     });\n  //     this.comentario = '';\n  // }\n\n\n  render() {\n    return React.createElement(\"section\", {\n      className: \"fotoAtualizacoes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      onClick: this.like.bind(this),\n      className: this.props.foto.likeada ? \"fotoAtualizacoes-like-ativo\" : \"fotoAtualizacoes-like\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Likar\"), React.createElement(\"form\", {\n      className: \"fotoAtualizacoes-form\",\n      onSubmit: this.comenta.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Adicione um coment\\xE1rio...\",\n      className: \"fotoAtualizacoes-form-campo\",\n      ref: input => this.comentario = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Comentar!\",\n      className: \"fotoAtualizacoes-form-submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\PhilippeBrissant\\Downloads\\Alura\\react\\parte2-instalura\\src\\componentes\\Foto.js"],"names":["React","Component","Link","Foto","render","props","foto","urlFoto","like","comenta","Header","urlPerfil","loginUsuario","horario","FotoInfo","likers","map","liker","login","comentario","comentarios","comentarioDaFoto","id","texto","FotoAtualizacao","event","preventDefault","value","bind","likeada","input"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class Foto extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"foto\">\r\n                <Header foto={this.props.foto}/>\r\n                <img alt=\"foto\" className=\"foto-src\" src={this.props.foto.urlFoto} />\r\n                <FotoInfo foto={this.props.foto}/>\r\n                <FotoAtualizacao foto={this.props.foto} like={this.props.like} comenta={this.props.comenta}/>\r\n                {/* <FotoAtualizacoes {...this.props}/> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Header extends Component{\r\n    render(){\r\n        return(\r\n            <header className=\"foto-header\">\r\n                    <figure className=\"foto-usuario\">\r\n                        <img src={this.props.foto.urlPerfil} alt=\"foto do usuario\" />\r\n                        <figcaption className=\"foto-usuario\">\r\n                            <Link to={`/timeline/${this.props.foto.loginUsuario}`}>\r\n                                {this.props.foto.loginUsuario}\r\n                            </Link>\r\n                        </figcaption>\r\n                    </figure>\r\n                    <time className=\"foto-data\">{this.props.foto.horario}</time>\r\n                </header>\r\n        );\r\n    }    \r\n}\r\n\r\nclass FotoInfo extends Component{\r\n\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.state = {likers: this.props.foto.likers, comentarios: this.props.foto.comentarios}\r\n    // }\r\n\r\n    // componentWillMount(){\r\n    //     Pubsub.subscribe('atualiza-liker', (topico, infoLiker) => {\r\n    //         // console.log(topico);\r\n    //         // console.log('infoliker: ', infoLiker);\r\n            \r\n    //         if(this.props.foto.id === infoLiker.fotoId){\r\n    //             const possivelLiker = this.state.likers.find(liker => liker.login === infoLiker.liker.login);\r\n    //             // console.log('possivelLiker: ', possivelLiker);\r\n    //             //se não achar o novo liker na lista, adiciona-o\r\n    //             if(possivelLiker === undefined){\r\n    //                 const novosLikers = this.state.likers.concat(infoLiker.liker);\r\n    //                 this.setState({likers: novosLikers});\r\n    //             }\r\n    //             //caso contrário, o liker está na lista, ou seja, ele esta dando dislike e tem que sair da mesma\r\n    //             else{\r\n    //                 const novosLikers = this.state.likers.filter(liker => liker.login !== infoLiker.liker.login);\r\n    //                 this.setState({likers: novosLikers});\r\n    //             }\r\n    //         }           \r\n    //     });\r\n\r\n    //     Pubsub.subscribe('novos-comentarios', (topico, infoComentario) => {\r\n    //         if(this.props.foto.id === infoComentario.fotoId){\r\n    //             const novosComents = this.state.comentarios.concat(infoComentario.comentario);\r\n    //             this.setState({comentarios: novosComents});\r\n    //         }\r\n    //     });\r\n    // }\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"foto-info\">\r\n                <div className=\"foto-info-likes\">\r\n                    {\r\n                        this.props.foto.likers.map(\r\n                            liker => {\r\n                                return (\r\n                                    <Link key={liker.login} to={`/timeline/${liker.login}`}>\r\n                                        {liker.login}, \r\n                                    </Link>\r\n                                )\r\n                            }\r\n                        )\r\n                    }\r\n                    curtiram\r\n                </div>\r\n\r\n                <p className=\"foto-info-legenda\">\r\n                    <Link to={`/timeline/${this.props.foto.loginUsuario}`} className=\"foto-info-autor\">\r\n                        {this.props.foto.loginUsuario} \r\n                    </Link>\r\n                     {this.props.foto.comentario}\r\n                </p>\r\n\r\n                <ul className=\"foto-info-comentarios\">\r\n                    {\r\n                        this.props.foto.comentarios.map(\r\n                            comentarioDaFoto => {\r\n                                return (\r\n                                    <li key={comentarioDaFoto.id} className=\"comentario\">\r\n                                        <Link to={`/timeline/${comentarioDaFoto.login}`} className=\"foto-info-autor\">\r\n                                            {comentarioDaFoto.login } \r\n                                        </Link>\r\n                                        {comentarioDaFoto.texto}\r\n                                    </li>\r\n                                )\r\n                            }\r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass FotoAtualizacao extends Component{\r\n\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.state = {liked: this.props.foto.likeada};\r\n    // }\r\n\r\n    like(event){\r\n        event.preventDefault();\r\n        this.props.like(this.props.foto.id);\r\n    }\r\n\r\n    comenta(event){\r\n        event.preventDefault();\r\n        this.props.comenta(this.props.foto.id, this.comentario.value);\r\n    }\r\n\r\n    // like(event){\r\n    //     event.preventDefault();\r\n\r\n    //     const url = `https://instalura-api.herokuapp.com/api/fotos/${this.props.foto.id}/like?X-AUTH-TOKEN=${localStorage.getItem('auth-token')}`;\r\n\r\n    //     fetch(url, {method: 'POST'})\r\n    //     .then(response => {\r\n    //         if(response.ok)\r\n    //             return response.json();\r\n    //         else{\r\n    //             // console.log('response: ', response);\r\n    //             throw new Error(\"Não foi possível realizar o like da foto\");\r\n    //         }\r\n    //     })\r\n    //     .then(liker =>{\r\n    //         // console.log('liker: ', liker);\r\n    //         this.setState({ liked : !this.state.liked });\r\n    //         Pubsub.publish('atualiza-liker', {fotoId:this.props.foto.id, liker: liker});\r\n    //         // Pubsub.publish('atualiza-liker', {fotoId:this.props.id, liker}); shortest hand\r\n    //     });\r\n    // }\r\n\r\n    // comenta(event){\r\n    //     event.preventDefault();\r\n\r\n    //     const url = `https://instalura-api.herokuapp.com/api/fotos/${this.props.foto.id}/comment?X-AUTH-TOKEN=${localStorage.getItem('auth-token')}`;\r\n    //     const resquestInfo = {\r\n    //         method: 'POST',\r\n    //         body: JSON.stringify({\r\n    //             texto: this.comentario.value\r\n    //         }),\r\n    //         headers: new Headers({\r\n    //             'Content-type':'application/json'\r\n    //         })\r\n    //     };\r\n        \r\n    //     fetch(url, resquestInfo)\r\n    //     .then(response =>{\r\n    //         if(response.ok)\r\n    //             return response.json();\r\n    //         else\r\n    //             return new Error(\"Erro ao comentar\");\r\n    //     })\r\n    //     .then(coment =>{\r\n    //         Pubsub.publish('novos-comentarios', {fotoId: this.props.foto.id, comentario: coment});\r\n    //     });\r\n\r\n    //     this.comentario = '';\r\n    // }\r\n\r\n    render(){\r\n        return(\r\n            <section className=\"fotoAtualizacoes\">\r\n                <a onClick={this.like.bind(this)} className={this.props.foto.likeada ? \"fotoAtualizacoes-like-ativo\" : \"fotoAtualizacoes-like\"}> \r\n                    Likar\r\n                </a>\r\n                <form className=\"fotoAtualizacoes-form\" onSubmit={this.comenta.bind(this)}>\r\n                    <input type=\"text\" placeholder=\"Adicione um comentário...\" className=\"fotoAtualizacoes-form-campo\" ref={input => this.comentario = input}/>\r\n                    <input type=\"submit\" value=\"Comentar!\" className=\"fotoAtualizacoes-form-submit\" />\r\n                </form>\r\n            </section>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}