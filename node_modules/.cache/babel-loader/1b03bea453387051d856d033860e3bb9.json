{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PhilippeBrissant\\\\Downloads\\\\Alura\\\\react\\\\parte2-instalura\\\\src\\\\componentes\\\\Timeline.js\";\nimport React, { Component } from 'react';\nimport FotoItem from './Foto';\nexport default class Timeline extends Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props);\n    this.state = {\n      fotos: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    /*\r\n    //fetch API = alternativa ao AJAX\r\n    //retorna uma Promise\r\n    const resultado = fetch('https://instalura-api.herokuapp.com/api/public/fotos/rafael');\r\n    const html = resultado.then(resp => resp.text());\r\n    html.then(pagina => console.log(pagina));\r\n    \r\n      var p = new Promise(resolve => resolve(\"curso react\"));\r\n    //p será uma promise com estado \"resolved\" e valor \"curso react\"\r\n    //é possível passar uma função para 'reject' também\r\n    */\n\n    var url = '';\n    if (localStorage.getItem('auth-token') != null) url = \"https://instalura-api.herokuapp.com/api/fotos?X-AUTH-TOKEN=\".concat(localStorage.getItem('auth-token'));else url = \"https://instalura-api.herokuapp.com/api/public/fotos/\".concat(this.props.login);\n    fetch(url).then(response => response.json()).then(fotos => {\n      this.setState({\n        fotos: fotos\n      });\n    }).catch(erro => console.log(erro));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"fotos container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.state.fotos.map(foto => React.createElement(FotoItem, {\n      key: foto.id,\n      foto: foto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\PhilippeBrissant\\Downloads\\Alura\\react\\parte2-instalura\\src\\componentes\\Timeline.js"],"names":["React","Component","FotoItem","Timeline","constructor","props","console","log","state","fotos","componentDidMount","url","localStorage","getItem","login","fetch","then","response","json","setState","catch","erro","render","map","foto","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,QAArB;AAEA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAE5CG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB;AACA,SAAKG,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAC;AAAP,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACfJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB;AACA;;;;;;;;;;;;AAYD,QAAIM,GAAG,GAAG,EAAV;AACC,QAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,KAAsC,IAAzC,EACIF,GAAG,wEAAiEC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAjE,CAAH,CADJ,KAGIF,GAAG,kEAA2D,KAAKN,KAAL,CAAWS,KAAtE,CAAH;AAEJC,IAAAA,KAAK,CAACJ,GAAD,CAAL,CACCK,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMP,KAAK,IAAI;AACX,WAAKU,QAAL,CAAc;AAACV,QAAAA,KAAK,EAACA;AAAP,OAAd;AACH,KAJD,EAIGW,KAJH,CAISC,IAAI,IAAIf,OAAO,CAACC,GAAR,CAAYc,IAAZ,CAJjB;AAKH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKd,KAAL,CAAWC,KAAX,CAAiBc,GAAjB,CAAqBC,IAAI,IAAI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,MAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7B,CAFR,CADJ;AAOH;;AA3C2C","sourcesContent":["import React, { Component } from 'react'\r\nimport FotoItem from './Foto';\r\n\r\nexport default class Timeline extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        console.log(this.props);\r\n        this.state = {fotos:[]};\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(this.props);\r\n        /*\r\n        //fetch API = alternativa ao AJAX\r\n        //retorna uma Promise\r\n        const resultado = fetch('https://instalura-api.herokuapp.com/api/public/fotos/rafael');\r\n        const html = resultado.then(resp => resp.text());\r\n        html.then(pagina => console.log(pagina));\r\n        \r\n\r\n        var p = new Promise(resolve => resolve(\"curso react\"));\r\n        //p será uma promise com estado \"resolved\" e valor \"curso react\"\r\n        //é possível passar uma função para 'reject' também\r\n        */\r\n       var url = '';\r\n        if(localStorage.getItem('auth-token') != null)\r\n            url = `https://instalura-api.herokuapp.com/api/fotos?X-AUTH-TOKEN=${localStorage.getItem('auth-token')}`;\r\n        else\r\n            url = `https://instalura-api.herokuapp.com/api/public/fotos/${this.props.login}`\r\n\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(fotos => {\r\n            this.setState({fotos:fotos});\r\n        }).catch(erro => console.log(erro));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"fotos container\">\r\n                {\r\n                    this.state.fotos.map(foto => <FotoItem key={foto.id} foto={foto} />)\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}