{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PhilippeBrissant\\\\Downloads\\\\Alura\\\\react\\\\parte2-instalura\\\\src\\\\componentes\\\\Foto.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Pubsub from 'pubsub-js';\nexport default class Foto extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"foto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(Header, {\n      foto: this.props.foto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      alt: \"foto\",\n      className: \"foto-src\",\n      src: this.props.foto.urlFoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }), React.createElement(FotoInfo, {\n      foto: this.props.foto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }), React.createElement(FotoAtualizacao, {\n      foto: this.props.foto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass Header extends Component {\n  render() {\n    return React.createElement(\"header\", {\n      className: \"foto-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"figure\", {\n      className: \"foto-usuario\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.foto.urlPerfil,\n      alt: \"foto do usuario\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(\"figcaption\", {\n      className: \"foto-usuario\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/timeline/\".concat(this.props.foto.loginUsuario),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.props.foto.loginUsuario))), React.createElement(\"time\", {\n      className: \"foto-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, this.props.foto.horario));\n  }\n\n}\n\nclass FotoInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      likers: this.props.foto.likers,\n      comentarios: this.props.foto.comentarios\n    };\n  }\n\n  componentWillMount() {\n    Pubsub.subscribe('atualiza-liker', (topico, infoLiker) => {\n      // console.log(topico);\n      // console.log('infoliker: ', infoLiker);\n      if (this.props.foto.id == infoLiker.fotoId) {\n        const possivelLiker = this.state.likers.find(liker => liker.login === infoLiker.liker.login); // console.log('possivelLiker: ', possivelLiker);\n        //se não achar o novo liker na lista, adiciona-o\n\n        if (possivelLiker == undefined) {\n          const novosLikers = this.state.likers.concat(infoLiker.liker);\n          this.setState({\n            likers: novosLikers\n          });\n        } //caso contrário, o liker está na lista, ou seja, ele esta dando dislike e tem que sair da mesma\n        else {\n            const novosLikers = this.state.likers.filter(liker => liker.login !== infoLiker.liker.login);\n            this.setState({\n              likers: novosLikers\n            });\n          }\n      }\n    });\n    Pubsub.subscribe('novos-comentarios', (topico, infoComentario) => {\n      console.log(infoComentario);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"foto-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"foto-info-likes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.likers.map(liker => {\n      return React.createElement(Link, {\n        key: liker.login,\n        to: \"/timeline/\".concat(liker.login),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, liker.login, \",\");\n    }), \"curtiram\"), React.createElement(\"p\", {\n      className: \"foto-info-legenda\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/timeline/\".concat(this.props.foto.loginUsuario),\n      className: \"foto-info-autor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.props.foto.loginUsuario), this.props.foto.comentario), React.createElement(\"ul\", {\n      className: \"foto-info-comentarios\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.props.foto.comentarios.map(comentarioDaFoto => {\n      return React.createElement(\"li\", {\n        key: comentarioDaFoto.id,\n        className: \"comentario\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/timeline/\".concat(comentarioDaFoto.login),\n        className: \"foto-info-autor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, comentarioDaFoto.login), comentarioDaFoto.texto);\n    })));\n  }\n\n}\n\nclass FotoAtualizacao extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      liked: this.props.foto.likeada\n    };\n  }\n\n  like(event) {\n    event.preventDefault();\n    const url = \"https://instalura-api.herokuapp.com/api/fotos/\".concat(this.props.foto.id, \"/like?X-AUTH-TOKEN=\").concat(localStorage.getItem('auth-token'));\n    fetch(url, {\n      method: 'POST'\n    }).then(response => {\n      if (response.ok) return response.json();else {\n        // console.log('response: ', response);\n        throw new Error(\"Não foi possível realizar o like da foto\");\n      }\n    }).then(liker => {\n      // console.log('liker: ', liker);\n      this.setState({\n        liked: !this.state.liked\n      });\n      Pubsub.publish('atualiza-liker', {\n        fotoId: this.props.foto.id,\n        liker: liker\n      }); // Pubsub.publish('atualiza-liker', {fotoId:this.props.id, liker}); shortest hand\n    });\n  }\n\n  comenta(event) {\n    event.preventDefault();\n    const url = \"https://instalura-api.herokuapp.com/api/fotos/\".concat(this.props.foto.id, \"/comment?X-AUTH-TOKEN=\").concat(localStorage.getItem('auth-token'));\n    const resquestInfo = {\n      method: 'POST',\n      body: JSON.stringify({\n        texto: this.comentario.value\n      }),\n      headers: new Headers({\n        'Content-type': 'application/json'\n      })\n    };\n    fetch(url, resquestInfo).then(response => {\n      if (response.ok) return response.json();else return new Error(\"Erro ao comentar\");\n    }).then(coment => {\n      Pubsub.publish('novos-comentarios', {\n        fotoId: this.props.foto.id,\n        comentario: coment\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      className: \"fotoAtualizacoes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      onClick: this.like.bind(this),\n      className: this.state.liked ? \"fotoAtualizacoes-like-ativo\" : \"fotoAtualizacoes-like\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Likar\"), React.createElement(\"form\", {\n      className: \"fotoAtualizacoes-form\",\n      onSubmit: this.comenta.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Adicione um coment\\xE1rio...\",\n      className: \"fotoAtualizacoes-form-campo\",\n      ref: input => this.comentario = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Comentar!\",\n      className: \"fotoAtualizacoes-form-submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\PhilippeBrissant\\Downloads\\Alura\\react\\parte2-instalura\\src\\componentes\\Foto.js"],"names":["React","Component","Link","Pubsub","Foto","render","props","foto","urlFoto","Header","urlPerfil","loginUsuario","horario","FotoInfo","constructor","state","likers","comentarios","componentWillMount","subscribe","topico","infoLiker","id","fotoId","possivelLiker","find","liker","login","undefined","novosLikers","concat","setState","filter","infoComentario","console","log","map","comentario","comentarioDaFoto","texto","FotoAtualizacao","liked","likeada","like","event","preventDefault","url","localStorage","getItem","fetch","method","then","response","ok","json","Error","publish","comenta","resquestInfo","body","JSON","stringify","value","headers","Headers","coment","bind","input"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport Pubsub from 'pubsub-js';\r\n\r\nexport default class Foto extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"foto\">\r\n                <Header foto={this.props.foto}/>\r\n                <img alt=\"foto\" className=\"foto-src\" src={this.props.foto.urlFoto} />\r\n                <FotoInfo foto={this.props.foto}/>\r\n                <FotoAtualizacao foto={this.props.foto}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Header extends Component{\r\n    render(){\r\n        return(\r\n            <header className=\"foto-header\">\r\n                    <figure className=\"foto-usuario\">\r\n                        <img src={this.props.foto.urlPerfil} alt=\"foto do usuario\" />\r\n                        <figcaption className=\"foto-usuario\">\r\n                            <Link to={`/timeline/${this.props.foto.loginUsuario}`}>\r\n                                {this.props.foto.loginUsuario}\r\n                            </Link>\r\n                        </figcaption>\r\n                    </figure>\r\n                    <time className=\"foto-data\">{this.props.foto.horario}</time>\r\n                </header>\r\n        );\r\n    }    \r\n}\r\n\r\nclass FotoInfo extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {likers: this.props.foto.likers, comentarios: this.props.foto.comentarios}\r\n    }\r\n\r\n    componentWillMount(){\r\n        Pubsub.subscribe('atualiza-liker', (topico, infoLiker) => {\r\n            // console.log(topico);\r\n            // console.log('infoliker: ', infoLiker);\r\n            \r\n            if(this.props.foto.id == infoLiker.fotoId){\r\n                const possivelLiker = this.state.likers.find(liker => liker.login === infoLiker.liker.login);\r\n                // console.log('possivelLiker: ', possivelLiker);\r\n                //se não achar o novo liker na lista, adiciona-o\r\n                if(possivelLiker == undefined){\r\n                    const novosLikers = this.state.likers.concat(infoLiker.liker);\r\n                    this.setState({likers: novosLikers});\r\n                }\r\n                //caso contrário, o liker está na lista, ou seja, ele esta dando dislike e tem que sair da mesma\r\n                else{\r\n                    const novosLikers = this.state.likers.filter(liker => liker.login !== infoLiker.liker.login);\r\n                    this.setState({likers: novosLikers});\r\n                }\r\n            }           \r\n        });\r\n\r\n        Pubsub.subscribe('novos-comentarios', (topico, infoComentario) => {\r\n            console.log(infoComentario);\r\n        });\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"foto-info\">\r\n                <div className=\"foto-info-likes\">\r\n                    {\r\n                        this.state.likers.map(\r\n                            liker => {\r\n                                return (\r\n                                    <Link key={liker.login} to={`/timeline/${liker.login}`}>\r\n                                        {liker.login}, \r\n                                    </Link>\r\n                                )\r\n                            }\r\n                        )\r\n                    }\r\n                    curtiram\r\n                </div>\r\n\r\n                <p className=\"foto-info-legenda\">\r\n                    <Link to={`/timeline/${this.props.foto.loginUsuario}`} className=\"foto-info-autor\">\r\n                        {this.props.foto.loginUsuario} \r\n                    </Link>\r\n                     {this.props.foto.comentario}\r\n                </p>\r\n\r\n                <ul className=\"foto-info-comentarios\">\r\n                    {\r\n                        this.props.foto.comentarios.map(\r\n                            comentarioDaFoto => {\r\n                                return (\r\n                                    <li key={comentarioDaFoto.id} className=\"comentario\">\r\n                                        <Link to={`/timeline/${comentarioDaFoto.login}`} className=\"foto-info-autor\">\r\n                                            {comentarioDaFoto.login } \r\n                                        </Link>\r\n                                        {comentarioDaFoto.texto}\r\n                                    </li>\r\n                                )\r\n                            }\r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass FotoAtualizacao extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {liked: this.props.foto.likeada};\r\n    }\r\n\r\n    like(event){\r\n        event.preventDefault();\r\n\r\n        const url = `https://instalura-api.herokuapp.com/api/fotos/${this.props.foto.id}/like?X-AUTH-TOKEN=${localStorage.getItem('auth-token')}`;\r\n\r\n        fetch(url, {method: 'POST'})\r\n        .then(response => {\r\n            if(response.ok)\r\n                return response.json();\r\n            else{\r\n                // console.log('response: ', response);\r\n                throw new Error(\"Não foi possível realizar o like da foto\");\r\n            }\r\n        })\r\n        .then(liker =>{\r\n            // console.log('liker: ', liker);\r\n            this.setState({ liked : !this.state.liked });\r\n            Pubsub.publish('atualiza-liker', {fotoId:this.props.foto.id, liker: liker});\r\n            // Pubsub.publish('atualiza-liker', {fotoId:this.props.id, liker}); shortest hand\r\n        });\r\n    }\r\n\r\n    comenta(event){\r\n        event.preventDefault();\r\n\r\n        const url = `https://instalura-api.herokuapp.com/api/fotos/${this.props.foto.id}/comment?X-AUTH-TOKEN=${localStorage.getItem('auth-token')}`;\r\n        const resquestInfo = {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                texto: this.comentario.value\r\n            }),\r\n            headers: new Headers({\r\n                'Content-type':'application/json'\r\n            })\r\n        };\r\n        \r\n        fetch(url, resquestInfo)\r\n        .then(response =>{\r\n            if(response.ok)\r\n                return response.json();\r\n            else\r\n                return new Error(\"Erro ao comentar\");\r\n        })\r\n        .then(coment =>{\r\n            Pubsub.publish('novos-comentarios', {fotoId: this.props.foto.id, comentario: coment});\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <section className=\"fotoAtualizacoes\">\r\n                <a onClick={this.like.bind(this)} className={this.state.liked ? \"fotoAtualizacoes-like-ativo\" : \"fotoAtualizacoes-like\"}> \r\n                    Likar\r\n                </a>\r\n                <form className=\"fotoAtualizacoes-form\" onSubmit={this.comenta.bind(this)}>\r\n                    <input type=\"text\" placeholder=\"Adicione um comentário...\" className=\"fotoAtualizacoes-form-campo\" ref={input => this.comentario = input}/>\r\n                    <input type=\"submit\" value=\"Comentar!\" className=\"fotoAtualizacoes-form-submit\" />\r\n                </form>\r\n            </section>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}