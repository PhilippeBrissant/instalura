{"ast":null,"code":"import Pubsub from 'pubsub-js';\nexport default class LogicaTimeline {\n  constructor(fotos) {\n    this.fotos = fotos;\n  }\n\n  lista(urlPerfil) {\n    fetch(urlPerfil).then(response => response.json()).then(fotos => {\n      this.fotos = fotos;\n      Pubsub.publish('timeline', this.fotos);\n    });\n  }\n\n  comenta(fotoId, textoComentario) {\n    const requestInfo = {\n      method: 'POST',\n      body: JSON.stringify({\n        texto: textoComentario\n      }),\n      headers: new Headers({\n        'Content-type': 'application/json'\n      })\n    };\n    fetch(\"http://localhost:8080/api/fotos/\".concat(fotoId, \"/comment?X-AUTH-TOKEN=\").concat(localStorage.getItem('auth-token')), requestInfo).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(\"não foi possível comentar\");\n      }\n    }).then(novoComentario => {\n      const fotoAchada = this.fotos.find(foto => foto.id === fotoId);\n      fotoAchada.comentarios.push(novoComentario);\n      Pubsub.publish('timeline', this.fotos);\n    });\n  }\n\n  like(fotoId) {\n    fetch(\"http://localhost:8080/api/fotos/\".concat(fotoId, \"/like?X-AUTH-TOKEN=\").concat(localStorage.getItem('auth-token')), {\n      method: 'POST'\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(\"não foi possível realizar o like da foto\");\n      }\n    }).then(liker => {\n      const fotoAchada = this.fotos.find(foto => foto.id === fotoId);\n      fotoAchada.likeada = !fotoAchada.likeada;\n      const possivelLiker = fotoAchada.likers.find(likerAtual => likerAtual.login === liker.login);\n\n      if (possivelLiker === undefined) {\n        fotoAchada.likers.push(liker);\n      } else {\n        const novosLikers = fotoAchada.likers.filter(likerAtual => likerAtual.login !== liker.login);\n        fotoAchada.likers = novosLikers;\n      }\n\n      Pubsub.publish('timeline', this.fotos);\n    });\n  }\n\n  subscribe(callback) {\n    Pubsub.subscribe('timeline', fotos => {\n      callback(fotos);\n    });\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\PhilippeBrissant\\Downloads\\Alura\\react\\parte2-instalura\\src\\logicas\\TimelineStore.js"],"names":["Pubsub","LogicaTimeline","constructor","fotos","lista","urlPerfil","fetch","then","response","json","publish","comenta","fotoId","textoComentario","requestInfo","method","body","JSON","stringify","texto","headers","Headers","localStorage","getItem","ok","Error","novoComentario","fotoAchada","find","foto","id","comentarios","push","like","liker","likeada","possivelLiker","likers","likerAtual","login","undefined","novosLikers","filter","subscribe","callback"],"mappings":"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","sourcesContent":["import Pubsub from 'pubsub-js';\n\nexport default class LogicaTimeline {\n\n    constructor(fotos){\n        this.fotos = fotos;\n    }\n\n    lista(urlPerfil){\n      fetch(urlPerfil)\n       .then(response => response.json())\n       .then(fotos => {         \n         this.fotos = fotos;\n         Pubsub.publish('timeline',this.fotos);         \n       });              \n    }\n\n    comenta(fotoId,textoComentario) {\n      const requestInfo = {\n        method:'POST',\n        body:JSON.stringify({texto:textoComentario}),\n        headers: new Headers({\n          'Content-type':'application/json'\n        })\n      };\n\n      fetch(`http://localhost:8080/api/fotos/${fotoId}/comment?X-AUTH-TOKEN=${localStorage.getItem('auth-token')}`,requestInfo)\n        .then(response => {\n          if(response.ok){\n            return response.json();\n          } else {\n            throw new Error(\"não foi possível comentar\");\n          }\n        })\n        .then(novoComentario => {\n            const fotoAchada = this.fotos.find(foto => foto.id === fotoId);        \n            fotoAchada.comentarios.push(novoComentario);\n            Pubsub.publish('timeline',this.fotos);\n        });      \n    }    \n\n    like(fotoId){\n      fetch(`http://localhost:8080/api/fotos/${fotoId}/like?X-AUTH-TOKEN=${localStorage.getItem('auth-token')}`,{method:'POST'})\n        .then(response => {\n          if(response.ok) {\n            return response.json();\n          } else {            \n            throw new Error(\"não foi possível realizar o like da foto\");\n          }\n        })\n        .then(liker => {          \n            const fotoAchada = this.fotos.find(foto => foto.id === fotoId);\n            fotoAchada.likeada = !fotoAchada.likeada;\n            \n            const possivelLiker = fotoAchada.likers.find(likerAtual => likerAtual.login === liker.login);\n\n            if(possivelLiker === undefined){\n                fotoAchada.likers.push(liker);\n            } else {\n                const novosLikers = fotoAchada.likers.filter(likerAtual => likerAtual.login !== liker.login);\n                fotoAchada.likers = novosLikers;\n            }\n            Pubsub.publish('timeline',this.fotos);\n        });              \n    }\n\n    subscribe(callback){\n      Pubsub.subscribe('timeline',(fotos) => {\n        callback(fotos);\n      });        \n    }\n}"]},"metadata":{},"sourceType":"module"}